name: SonarQube Analysis

on:
  push:
    branches:
      - main

jobs:
  sonarqube-analysis-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17

      - name: Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner --version 5.14.0

      - name: Install dotnet-coverage
        run: dotnet tool install -g dotnet-coverage

      - name: Run SonarQube Analysis
        working-directory: ./Application/Backend/GamifyWork
        run: |
          dotnet sonarscanner begin /k:"GamifyWork" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          dotnet build
          dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Generate Coverage Report
        run: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
        continue-on-error: true

      - name: Convert Coverage Report to SonarQube format
        run: reportgenerator -reports:**/coverage.opencover.xml -targetdir:./CoverageReport -reporttypes:SonarQube
        continue-on-error: true

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: ./CoverageReport/SonarQube.xml

  sonarqube-analysis-frontend:
    runs-on: ubuntu-latest
    permissions: read-all

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: SonarQube Analysis
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: ./Application/Frontend/GamifyWork
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_REACT }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
