name: SonarQube Analysis

on:
  push:
    branches:
      - main

jobs:
  sonarqube-analysis-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17

      - name: Run SonarQube Analysis
        working-directory: ./Application/Backend/GamifyWork
        run: |
          dotnet tool install --global dotnet-sonarscanner --version 5.14.0
          dotnet sonarscanner begin /k:"GamifyWork" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          dotnet build
          dotnet test
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  sonarqube-analysis-frontend:
    runs-on: ubuntu-latest
    permissions: read-all

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install SonarScanner
        run: |
          sudo apt-get install -y unzip
          curl -L -o sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonar-scanner-cli.zip
          export PATH=$PWD/sonar-scanner-4.6.2.2472-linux/bin:$PATH

      - name: SonarQube Analysis
        run: |
          docker run -e SONAR_HOST_URL=${{ secrets.SONAR_HOST_URL }} -e SONAR_TOKEN=${{ secrets.SONAR_TOKEN_REACT }} -v $PWD:/usr/src -w /usr/src ./sonarsource/sonar-scanner-cli
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_REACT }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
