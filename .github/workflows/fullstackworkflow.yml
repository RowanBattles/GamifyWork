name: Full Stack Workflow

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "6.0.x"

      - name: Restore backend dependencies
        run: dotnet restore ./Application/Backend/GamifyWork/GamifyWork.sln

      - name: Build backend
        run: dotnet build -c Release --no-restore ./Application/Backend/GamifyWork/GamifyWork.sln

      - name: Run backend UnitTests
        run: dotnet test ./Application/Backend/GamifyWork/GamifyWork.sln

  frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Restore frontend dependencies
        run: yarn install
        working-directory: ./Application/Frontend/GamifyWork

      - name: Run frontend unit tests
        run: yarn test
        working-directory: ./Application/Frontend/GamifyWork

      - name: Start frontend development server
        run: nohup yarn dev &
        working-directory: ./Application/Frontend/GamifyWork

      - name: Wait for frontend server to start
        run: sleep 10

  End-to-end_tests:
    runs-on: ubuntu-latest
    needs: frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        run: yarn install
        working-directory: ./Application/Frontend/GamifyWork

      - name: Run frontend
        run: yarn dev &
        working-directory: ./Application/Frontend/GamifyWork

      - name: Pull Keycloak Docker image
        run: docker pull rowanbattles/keywork

      - name: Run Keycloak Docker container
        run: |
          docker run -d -p 8080:8080 --name keycloak-container rowanbattles/keywork

      - name: Wait for frontend server to start
        run: |
          timeout=300
          while [ $timeout -gt 0 ]; do
            if nc -z localhost 5173; then
              break
            fi
            sleep 1
            ((timeout--))
          done
          if [ $timeout -eq 0 ]; then
            echo "Timeout waiting for frontend server to start"
            exit 1
          fi

      - name: Wait for Keycloak server to start
        run: |
          timeout=300
          while [ $timeout -gt 0 ]; do
            if docker exec keycloak-container curl -s -o /dev/null http://localhost:8080; then
              break
            fi
            sleep 1
            ((timeout--))
          done
          if [ $timeout -eq 0 ]; then
            echo "Timeout waiting for Keycloak server to start"
            exit 1
          fi

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./Application/Frontend/GamifyWork
    
  sonarqube-analysis-backend:
    runs-on: ubuntu-latest
    permissions: read-all
    needs: backend

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner --version 5.14.0

      - name: Install dotnet-coverage
        run: dotnet tool install -g dotnet-coverage

      - name: Run SonarQube Analysis
        working-directory: ./Application/Backend/GamifyWork
        run: |
          dotnet sonarscanner begin /k:"GamifyWorkApi" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build GamifyWork.sln --no-incremental
          dotnet-coverage collect "dotnet test GamifyWork.sln" -f xml -o "coverage.xml"
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN_BACKEND }}"

  sonarqube-analysis-frontend:
    runs-on: ubuntu-latest
    permissions: read-all
    needs: End-to-end_tests

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Restore dependencies
        run: |
          yarn install
        working-directory: ./Application/Frontend/GamifyWork

      - name: Test and coverage
        run: yarn test --coverage
        working-directory: ./Application/Frontend/GamifyWork

      - name: Remove lcov-report Directory
        run: rm -rf ./Application/Frontend/GamifyWork/coverage/lcov-report

      - name: SonarQube Analysis
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: ./Application/Frontend/GamifyWork
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}




