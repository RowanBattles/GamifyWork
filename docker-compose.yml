version: '3.4'

services:
  api:
    container_name: backend
    image: ${DOCKER_REGISTRY-}gamifyworkapi
    build:
      context: ./Application/Backend/GamifyWork
      dockerfile: src/GamifyWork.API/Dockerfile
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
    ports:
      - "7018:80"
      - "7017:443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      - database
      - keycloak
      
  ui:
    container_name: frontend
    image: ${DOCKER_REGISTRY-}gamifyworkfrontend
    build:
      context: ./Application/Frontend/GamifyWork
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - "5173:5173"
    depends_on:
      - api
      
  keycloak:
    container_name: keycloak
    image: rowanbattles/keywork
    restart: on-failure
    ports:
      - "8080:8080"

  database:
    container_name: database
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: gamifywork
    restart: always
    ports:
      - "3307:3306"
    volumes:
      - GamifyworkDatabaseVolume:/var/lib/mysql
      - ./Application/Backend/GamifyWork/init.sql:/docker-entrypoint-initdb.d/init.sql
      
  sonarqube:
    image: rowanbattles/sonarwork
    container_name: sonarqube
    ports:
      - "9000:9000"

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    restart: unless-stopped
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    ports:
      - 4040:4040


volumes:
  GamifyworkDatabaseVolume:
